// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.7;

import "forge-std/console.sol";
import "forge-std/Test.sol";
import "../src/Bytes.sol";

contract BytesTest is Test {
    Bytes public myBytes;
  
    function setUp() public {
        myBytes = new Bytes();
    }
    
    function testStoreData() public {
        bytes memory _data = "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000004600000000000000000000000000000000000000000000000000000000000000001f9bd164f5f8f183910d68475b45bc4d9cf54c4904462b3b7bbcded86a8b20c17000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000004e03657aea45a94fc7d47ba826c8d667c0d1e6e33a64a036ec44f58fa12d6c4500000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002ef30f720000000000000000000000000000000000000000000000000006194049f30f720000000000000000000000000000000000000000000000000006194049f30f720000000000000000000000000000000000000000000000000006194049f30f720000000000000000000000000000000000000000000000000006194049f30f72000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000006374dbc3000000000000000000000000000000000000000000000000000000006374dbc4000000000000000000000000000000000000000000000000000000006374dbc5000000000000000000000000000000000000000000000000000000006374dbc6000000000000000000000000000000000000000000000000000000006374dbc700000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000f4021500e208cb2325310ffe10157b6ca89dc0c542a691f2f8068c9e1938917fa3a87a96b63d856068f00c2196c1749b7fda0216875490606d529af3df4db683440e06e29267c663d5fff4d618a164938ccfe5bb1e26436b24c25ee76f218df4f72e2b0eae9b33c0b9b0ff0336a10c27be7b2ee8cb20259c142d00b74a89b490ae4ddb9fabd842c3555df77d3daeb5f5fd6fa6030a97be78c853d705496387d4b4dca3dbb8974c87d06a5903cc9759f538f60553032e84216f6d06964141ef8402c7eacd6c71cb9caee935371d67a95186918894ad06d03ef9b5ec839f0b2b5b6a4271d85a95befa07b15cb11871a4e8931d741a36000000000000000000000000";

        myBytes.store(_data);

        bytes memory newData = myBytes.storedBytes();

        console.logBytes(newData);


    }


}